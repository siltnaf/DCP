// AUTOMATICALLY GENERATED FILE. PLEASE DO NOT MODIFY IT MANUALLY
//
// PIO Unified Debugger
//
// Documentation: https://docs.platformio.org/page/plus/debugging.html
// Configuration: https://docs.platformio.org/page/projectconf/section_env_debug.html

{
    "version": "0.2.0",
    "configurations": [
        {
            "type": "platformio-debug",
            "request": "launch",
            "name": "PIO Debug",
            "executable": "d:/project/carrier/software/.pio/build/eval_f072vb/firmware.elf",
            "projectEnvName": "eval_f072vb",
            "toolchainBinDir": "C:/Users/Administrator/.platformio/packages/toolchain-gccarmnoneeabi/bin",
            "internalConsoleOptions": "openOnSessionStart",
            "svdPath": "C:/Users/Administrator/.platformio/platforms/ststm32/misc/svd/STM32F072x.svd",
            "preLaunchTask": {
                "type": "PlatformIO",
                "task": "Pre-Debug"
            }
        },
        {
            "type": "platformio-debug",
            "request": "launch",
            "name": "PIO Debug (skip Pre-Debug)",
            "executable": "d:/project/carrier/software/.pio/build/eval_f072vb/firmware.elf",
            "projectEnvName": "eval_f072vb",
            "toolchainBinDir": "C:/Users/Administrator/.platformio/packages/toolchain-gccarmnoneeabi/bin",
            "internalConsoleOptions": "openOnSessionStart",
            "svdPath": "C:/Users/Administrator/.platformio/platforms/ststm32/misc/svd/STM32F072x.svd"
        },
        {
            "type": "platformio-debug",
            "request": "launch",
            "name": "PIO Debug (without uploading)",
            "executable": "d:/project/carrier/software/.pio/build/eval_f072vb/firmware.elf",
            "projectEnvName": "eval_f072vb",
            "toolchainBinDir": "C:/Users/Administrator/.platformio/packages/toolchain-gccarmnoneeabi/bin",
            "internalConsoleOptions": "openOnSessionStart",
            "svdPath": "C:/Users/Administrator/.platformio/platforms/ststm32/misc/svd/STM32F072x.svd",
            "loadMode": "manual"
        },

        {
            "name": "JLink launch",
            "cwd": "${workspaceRoot}",
            "executable": "${workspaceRoot}/build/test-f407vg.elf",
            "request": "launch",
            "type": "cortex-debug",
            "servertype": "jlink",
            "device": "STM32F407VG",
            "interface": "swd",
            "runToMain": true, // else it starts at reset handler - not interested
            "preLaunchTask": "Build all", // configured in tasks.json
            // "preLaunchCommands": ["Build all"], // you can execute command instead of task
            "svdFile": "", // Include svd to watch device peripherals
            "swoConfig":
            {
                "enabled": true,
                "cpuFrequency": 160000000,
                "swoFrequency": 4000000,
                "source": "probe",
                "decoders":
                [
                    {
                        "label": "ITM port 0 output",
                        "type": "console",
                        "port": 0,
                        "showOnStartup": true,
                        "encoding": "ascii"
                    }
                ]
            }
        },
        {
            "name": "JLink attach",
            "cwd": "${workspaceRoot}",
            "executable": "${workspaceRoot}/build/test-f407vg.elf",
            "request": "attach",
            "type": "cortex-debug",
            "servertype": "jlink",
            "device": "STM32F407VG",
            "interface": "swd",
            "runToMain": true, // else it starts at reset handler - not interested
            "preLaunchTask": "Build all", // configured in tasks.json
            // "preLaunchCommands": ["Build all"], // you can execute command instead of task
            "svdFile": "", // Include svd to watch device peripherals
            "swoConfig":
            {
                "enabled": true,
                "cpuFrequency": 160000000,
                "swoFrequency": 4000000,
                "source": "probe",
                "decoders":
                [
                    {
                        "label": "ITM port 0 output",
                        "type": "console",
                        "port": 0,
                        "showOnStartup": true,
                        "encoding": "ascii"
                    }
                ]
            }
        }


    ]
}
